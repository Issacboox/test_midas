{"mappings":"AAAA,SAAS,UAAU,KAAa,EAAE,KAAe,EAAE,QAAkB,EAAE,MAAc;IACjF,MAAM,KAAe,IAAI,MAAM,MAAM,MAAM,EAAE,IAAI,CAAC;IAClD,EAAE,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;IAEjC,MAAM,WAA+C;QAAC;YAAE,MAAM;YAAQ,QAAQ,EAAE,CAAC,EAAE;QAAC;KAAE;IAEtF,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACnC,KAAK,MAAM,WAAW,SAAU;YAC5B,MAAM,oBAAoB,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG;YAC9C,MAAM,4BAA4B,KAAK,GAAG,CAAC,UAAU,KAAK,CAAC,IAAI,EAAE;YACjE,MAAM,kBAAkB,oBAAoB;YAC5C,EAAE,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG;YACpC,SAAS,IAAI,CAAC;gBAAE,MAAM,CAAC,eAAe,EAAE,QAAQ,CAAC;gBAAE,QAAQ,EAAE,CAAC,EAAE;YAAC;QACrE;QACA,MAAM,iBAAiB,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;QACvD,EAAE,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG;QACpC,SAAS,IAAI,CAAC;YAAE,MAAM;YAAQ,QAAQ,EAAE,CAAC,EAAE;QAAC;IAChD;IAEA,MAAM,mBAAmB,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,GAAG;IAC5D,IAAI,cAAc,EAAE,CAAC,MAAM,MAAM,GAAG,EAAE,GAAG;IACzC,SAAS,IAAI,CAAC;QAAE,MAAM,CAAC,eAAe,EAAE,OAAO,CAAC;QAAE,QAAQ;IAAY;IAEtE,IAAK,IAAI,IAAI,MAAM,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;QACvC,MAAM,4BAA4B,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;QACjE,MAAM,8BAA8B;QACpC,cAAc,KAAK,GAAG,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,GAAG;QAChD,SAAS,IAAI,CAAC;YAAE,MAAM,CAAC,kBAAkB,EAAE,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YAAE,QAAQ;QAAY;IACxG;IAEA,OAAO;AACX;AAEA,MAAM,WAAW,UAAU,GAAG;IAAC;IAAG;CAAE,EAAE;IAAC;IAAG;IAAG;CAAE,EAAE;AACjD,SAAS,OAAO,CAAC,CAAC,UAAU;IACxB,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,IAAI,CAAC,UAAU,EAAE,SAAS,MAAM,CAAC,CAAC;AACjF","sources":["src/q4.ts"],"sourcesContent":["function minEnergy(start: number, shops: number[], stations: number[], target: number): { path: string, energy: number }[] {\r\n    const dp: number[] = new Array(shops.length).fill(Infinity);\r\n    dp[0] = Math.abs(start - shops[0]);\r\n\r\n    const pathList: { path: string, energy: number }[] = [{ path: 'Walk', energy: dp[0] }];\r\n\r\n    for (let i = 1; i < shops.length; i++) {\r\n        for (const station of stations) {\r\n            const distanceToStation = Math.abs(shops[i] - station);\r\n            const distanceFromStationToShop = Math.abs(station - shops[i - 1]);\r\n            const energyUsedByBus = distanceToStation + distanceFromStationToShop;\r\n            dp[i] = Math.min(dp[i], dp[i - 1] + energyUsedByBus);\r\n            pathList.push({ path: `Bus to station ${station}`, energy: dp[i] });\r\n        }\r\n        const distanceToShop = Math.abs(shops[i] - shops[i - 1]);\r\n        dp[i] = Math.min(dp[i], dp[i - 1] + distanceToShop);\r\n        pathList.push({ path: 'Walk', energy: dp[i] });\r\n    }\r\n\r\n    const distanceToTarget = Math.abs(shops[shops.length - 1] - target);\r\n    let totalEnergy = dp[shops.length - 1] + distanceToTarget;\r\n    pathList.push({ path: `Walk to target ${target}`, energy: totalEnergy });\r\n\r\n    for (let i = shops.length - 1; i > 0; i--) {\r\n        const distanceFromShopToStation = Math.abs(shops[i] - stations[0]);\r\n        const energyUsedToReturnToStation = distanceFromShopToStation;\r\n        totalEnergy = Math.min(totalEnergy, dp[i - 1] + energyUsedToReturnToStation);\r\n        pathList.push({ path: `Return to station ${stations[0]} from shop ${shops[i]}`, energy: totalEnergy });\r\n    }\r\n\r\n    return pathList;\r\n}\r\n\r\nconst pathList = minEnergy(0, [4, 9], [3, 6, 8], 11);\r\npathList.forEach((pathInfo, index) => {\r\n    console.log(`Step ${index + 1}: ${pathInfo.path}, Energy: ${pathInfo.energy}`);\r\n});\r\n"],"names":[],"version":3,"file":"index.734eca29.js.map","sourceRoot":"/__parcel_source_root/"}